#include<iostream.h>
#include<conio.h>
#include<stdio.h>
int i,no;
int p_no[20];
class sjf{
public:
int bt[10],wt[10],tp[10];
float sum_wt,sum_tp;
float av_wt,av_tp;
sjf()
{
sum_wt=0;
sum_tp=0;
}
void init();
void input_burst();
void input_waiting();
void input_turn();
void average();
void output();
void sort();
};
void main()
{
clrscr();
sjf s;
s.init();
s.input_burst();
s.sort();
s.input_waiting();
s.input_turn();
s.average();
s.output();
getch();
}
void sjf::sort()
{
int j;
int temp,temp1;
for (i=1;i<=no;i++)
{
int min = bt[i];
int min1=p_no[i];
int minId = i;
for (j = i+1; j<=no; j++)
{
if (bt[j] < min)
{
min = bt[j];
minId = j;
min1=j;
}
}
temp = bt[i];
bt[i] = min;
bt[minId] = temp;
temp1 = p_no[i];
p_no[i] = min1;
p_no[minId] = temp1;
}
}
void sjf::input_burst()
{
for(i=1;i<=no;++i)
{
cout<<"Enter Burst time for Process "<<i<<": ";
cin>>bt[i];
p_no[i]=i;
}
cout<<"\n***************************\n";
}
void sjf::init()
{
cout<<"Enter number of Process: ";
cin>>no;
cout<<"\n***************************\n";
}
void sjf::input_waiting()
{
wt[1]=0;
for(i=2;i<=no;++i)
{
wt[i]=wt[i-1]+bt[i-1];
}
}
void sjf::input_turn()
{
for(i=1;i<=no;++i)
{
tp[i]=wt[i]+bt[i];
}
}
void sjf::average()
{
for(i=1;i<=no;++i)
{
sum_wt=sum_wt+wt[i];
sum_tp=sum_tp+tp[i];
}
av_wt=(float)(sum_wt/no);
av_tp=(float)(sum_tp/no);
}
void sjf::output()
{
cout<<"Process no\tBurst time\tWaiting time\tTurnaround time\n";
for(i=1;i<=no;++i)
{
cout<<p_no[i]<<"\t\t"<<bt[i]<<"\t\t"<<wt[i]<<"\t\t"<<tp[i]<<"\n";
}
cout<<"\n***************************\n";
cout<<"Average Waiting time: "<<av_wt<<"\n";
cout<<"Average Turnaround time: "<<av_tp;
cout<<"\n***************************\n";
}

